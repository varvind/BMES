# main.yml


name: CI/CD
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      db:
        image: postgres:12
        ports:
        - 5432/tcp
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: --entrypoint redis-server
      chrome:
        image: selenium/standalone-chrome:3.141.59-zirconium # this version should match that of the selenium-webdriver gem
        env:
          HUB_URL: http://chrome:4444/wd/hub
        volumes:
          - /dev/shm:/dev/shm

    steps:
      - uses: actions/checkout@v1
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.23.1'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      
      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache dir
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        id: cache-yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn install
        run: yarn install
      - name: Build and run test
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          REDIS_URL: redis://localhost:6379/0
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec rake db:create
          bundle exec rake db:migrate
          bundle exec rake db:seed
          bundle exec rspec .

